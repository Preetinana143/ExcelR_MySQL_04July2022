-- ARRAY

-- SYNTAX:

-- TYPE type_name IS VARRAY(5) OF VARCHAR2(100);
-- TYPE type_name IS VARRAY(5) OF INTEGER;

DECLARE
    type namesarray IS VARRAY(5) OF VARCHAR2(10);
    type marksarray IS VARRAY(5) OF INTEGER;
    names namesarray;
    marks marksarray;
    total integer;
BEGIN
    names := namesarray('Rajesh','Priya','karthik','Jagan');
    marks := marksarray(97,99,100,98);
    total := names.count;
    
    -- FOR x in 1 .. total LOOP
    --     dbms_output.put_line('Name: '||names(x) || ' and Mark: '|| marks(x) );
    -- END LOOP;
    dbms_output.put_line('Name: '||names(1) || ' and Mark: '|| marks(1) );
    dbms_output.put_line('Name: '||names(2) || ' and Mark: '|| marks(2) );
    dbms_output.put_line('Name: '||names(3) || ' and Mark: '|| marks(3) );
    dbms_output.put_line('Name: '||names(4) || ' and Mark: '|| marks(4) );
END;
/




-- EXCEPTION

CREATE TABLE CUSTOMER (
custid INTEGER,
custname VARCHAR2(100),
age INTEGER,
city VARCHAR2(100)
);

INSERT INTO CUSTOMER VALUES(1,'Ashwin',25,'Pune');
INSERT INTO CUSTOMER VALUES(2,'Arun',26,'Bangalore');
INSERT INTO CUSTOMER VALUES(3,'Vignesh',27,'Chennai');

SELECT * FROM CUSTOMER;


DECLARE
  c_id customer.custid%type := 3;
  c_name customer.custname%type;
  c_age INTEGER;
  c_city VARCHAR2(100);
  res INTEGER;
BEGIN
    SELECT  custname, age, city INTO c_name, c_age, c_city 
    FROM customer
    WHERE custid = c_id;
    dbms_output.put_line('Name :' || c_name);
    dbms_output.put_line('Age :' || c_age);
    dbms_output.put_line('City :' || c_city);
    res := 10/0;
EXCEPTION
    WHEN no_data_found THEN
        dbms_output.put_line('No customer data with id: 5');
    WHEN zero_divide THEN
        dbms_output.put_line('Cant divide any number with 0');
    WHEN others THEN
        dbms_output.put_line('New Error Occured!');

END;
/

-- PROCEDURE

CREATE OR REPLACE PROCEDURE welcome
AS
BEGIN
    dbms_output.put_line('Hello Everyone, Welcome to ExcelR!');
END;
/


EXECUTE welcome;

BEGIN
 welcome;
END;
/

DROP PROCEDURE welcome;


-- Parameter modes in procedure
-- IN , OUT , IN OUT

DECLARE
    a integer;
    b integer;
    c integer;
    PROCEDURE findMax(x IN integer, y IN integer, z OUT integer) IS
    BEGIN
        IF x>y THEN
            z := x;
        ELSE
            z := y;
        END IF;
    
    END;
    BEGIN
        a := 500;
        b := 100;
        findMax(a,b,c);
        dbms_output.put_line('maximum of 50,100 is :' || c);
    END;
    /
    
    
    DECLARE 
        x integer;
        PROCEDURE squareNum(x IN OUT integer ) AS
        BEGIN
            x := x * x;
        END;
        
        BEGIN
            x := 10;
            squareNum(x);
            dbms_output.put_line('Square of 10 is:' || x);
        END;
        /



























